<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd
            http://www.springframework.org/schema/rabbit
            http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">

    <!-- 连接服务配置  -->
    <bean id="rabbitConnectionFactoryConsumer" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"
          p:username="admin" p:password="admin" p:port="5672">
        <constructor-arg value="172.20.7.6"/>
    </bean>

    <bean id="rabbitConnectionFactorySlaveConsumer" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"
          p:username="admin" p:password="admin" p:port="5672">
        <constructor-arg value="172.20.7.5"/>
    </bean>

    <rabbit:connection-factory id="connectionFactory" addresses="172.20.7.6:5672,172.20.7.5:5672" username="admin"
                               password="admin" cache-mode="CONNECTION"
                               requested-heartbeat="5000"></rabbit:connection-factory>

    <rabbit:admin connection-factory="connectionFactory"/>


    <rabbit:queue id="public_queue" durable="true" auto-delete="false" exclusive="false" name="public_queue"/>
    <rabbit:queue id="public_queue2" durable="true" auto-delete="false" exclusive="false" name="public_queue2"/>

    <!-- fanout-exchange，作为发布-订阅模式使用。
        由于RabbitMQ的发布订阅模型是根据多个queue，多个消费者订阅实现的。此处声明的exchange不必预先绑定queue，
        在消费者声明queue并绑定到该exchange即可。
     -->
    <rabbit:fanout-exchange name="fanout-exchange" durable="true" auto-delete="false" id="fanout-exchange">
        <rabbit:bindings>
            <rabbit:binding queue="public_queue"></rabbit:binding>
            <rabbit:binding queue="public_queue2"></rabbit:binding>
        </rabbit:bindings>
    </rabbit:fanout-exchange>



    <!-- queue litener  观察 监听模式 当有消息到达时会通知监听在对应的队列上的监听对象-->
    <rabbit:listener-container connection-factory="rabbitConnectionFactorySlaveConsumer" acknowledge="auto">
        <rabbit:listener queues="queue_one" ref="queueOneListener"/>
    </rabbit:listener-container>


    <!-- 广播接收着 -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="public_queue" ref="clusterConsumerA"/>
    </rabbit:listener-container>
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto">
        <rabbit:listener queues="public_queue2" ref="clusterConsumerB"/>
    </rabbit:listener-container>
</beans>